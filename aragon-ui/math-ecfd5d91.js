"use strict";class JSBI extends Array{constructor(t,i){if(t>JSBI.__kMaxLength)throw new RangeError("Maximum BigInt size exceeded");super(t),this.sign=i}static BigInt(t){var i=Math.floor,e=Number.isFinite;if("number"==typeof t){if(0===t)return JSBI.__zero();if((0|t)===t)return 0>t?JSBI.__oneDigit(-t,!0):JSBI.__oneDigit(t,!1);if(!e(t)||i(t)!==t)throw new RangeError("The number "+t+" cannot be converted to BigInt because it is not an integer");return JSBI.__fromDouble(t)}if("string"==typeof t){const i=JSBI.__fromString(t);if(null===i)throw new SyntaxError("Cannot convert "+t+" to a BigInt");return i}if("boolean"==typeof t)return!0===t?JSBI.__oneDigit(1,!1):JSBI.__zero();if("object"==typeof t){if(t.constructor===JSBI)return t;const i=JSBI.__toPrimitive(t);return JSBI.BigInt(i)}throw new TypeError("Cannot convert "+t+" to a BigInt")}toDebugString(){const t=["BigInt["];for(const i of this)t.push((i?(i>>>0).toString(16):i)+", ");return t.push("]"),t.join("")}toString(t=10){if(2>t||36<t)throw new RangeError("toString() radix argument must be between 2 and 36");return 0===this.length?"0":0==(t&t-1)?JSBI.__toStringBasePowerOfTwo(this,t):JSBI.__toStringGeneric(this,t,!1)}static toNumber(t){var i=Math.clz32;const e=t.length;if(0===e)return 0;if(1===e){const i=t.__unsignedDigit(0);return t.sign?-i:i}const n=t.__digit(e-1),r=i(n),_=32*e-r;if(1024<_)return t.sign?-1/0:1/0;let o=_-1,s=n,l=e-1;const g=r+1;let u=32===g?0:s<<g;u>>>=12;const a=g-12;let f=12<=g?0:s<<20+g,c=20+g;0<a&&0<l&&(l--,s=t.__digit(l),u|=s>>>32-a,f=s<<a,c=a),0<c&&0<l&&(l--,s=t.__digit(l),f|=s>>>32-c,c-=32);const B=JSBI.__decideRounding(t,c,l,s);if((1===B||0===B&&1==(1&f))&&(f=f+1>>>0,0===f&&(u++,0!=u>>>20&&(u=0,o++,1023<o))))return t.sign?-1/0:1/0;const h=t.sign?-2147483648:0;return o=o+1023<<20,JSBI.__kBitConversionInts[1]=h|o|u,JSBI.__kBitConversionInts[0]=f,JSBI.__kBitConversionDouble[0]}static unaryMinus(t){if(0===t.length)return t;const i=t.__copy();return i.sign=!t.sign,i}static bitwiseNot(t){return t.sign?JSBI.__absoluteSubOne(t).__trim():JSBI.__absoluteAddOne(t,!0)}static exponentiate(t,i){if(i.sign)throw new RangeError("Exponent must be positive");if(0===i.length)return JSBI.__oneDigit(1,!1);if(0===t.length)return t;if(1===t.length&&1===t.__digit(0))return t.sign&&0==(1&i.__digit(0))?JSBI.unaryMinus(t):t;if(1<i.length)throw new RangeError("BigInt too big");let e=i.__unsignedDigit(0);if(1===e)return t;if(e>=JSBI.__kMaxLengthBits)throw new RangeError("BigInt too big");if(1===t.length&&2===t.__digit(0)){const i=1+(e>>>5),n=t.sign&&0!=(1&e),r=new JSBI(i,n);r.__initializeDigits();const _=1<<(31&e);return r.__setDigit(i-1,_),r}let n=null,r=t;for(0!=(1&e)&&(n=t),e>>=1;0!==e;e>>=1)r=JSBI.multiply(r,r),0!=(1&e)&&(n=null===n?r:JSBI.multiply(n,r));return n}static multiply(t,i){if(0===t.length)return t;if(0===i.length)return i;let e=t.length+i.length;32<=t.__clzmsd()+i.__clzmsd()&&e--;const n=new JSBI(e,t.sign!==i.sign);n.__initializeDigits();for(let e=0;e<t.length;e++)JSBI.__multiplyAccumulate(i,t.__digit(e),n,e);return n.__trim()}static divide(t,i){if(0===i.length)throw new RangeError("Division by zero");if(0>JSBI.__absoluteCompare(t,i))return JSBI.__zero();const e=t.sign!==i.sign,n=i.__unsignedDigit(0);let r;if(1===i.length&&65535>=n){if(1===n)return e===t.sign?t:JSBI.unaryMinus(t);r=JSBI.__absoluteDivSmall(t,n,null)}else r=JSBI.__absoluteDivLarge(t,i,!0,!1);return r.sign=e,r.__trim()}static remainder(t,i){if(0===i.length)throw new RangeError("Division by zero");if(0>JSBI.__absoluteCompare(t,i))return t;const e=i.__unsignedDigit(0);if(1===i.length&&65535>=e){if(1===e)return JSBI.__zero();const i=JSBI.__absoluteModSmall(t,e);return 0===i?JSBI.__zero():JSBI.__oneDigit(i,t.sign)}const n=JSBI.__absoluteDivLarge(t,i,!1,!0);return n.sign=t.sign,n.__trim()}static add(t,i){const e=t.sign;return e===i.sign?JSBI.__absoluteAdd(t,i,e):0<=JSBI.__absoluteCompare(t,i)?JSBI.__absoluteSub(t,i,e):JSBI.__absoluteSub(i,t,!e)}static subtract(t,i){const e=t.sign;return e===i.sign?0<=JSBI.__absoluteCompare(t,i)?JSBI.__absoluteSub(t,i,e):JSBI.__absoluteSub(i,t,!e):JSBI.__absoluteAdd(t,i,e)}static leftShift(t,i){return 0===i.length||0===t.length?t:i.sign?JSBI.__rightShiftByAbsolute(t,i):JSBI.__leftShiftByAbsolute(t,i)}static signedRightShift(t,i){return 0===i.length||0===t.length?t:i.sign?JSBI.__leftShiftByAbsolute(t,i):JSBI.__rightShiftByAbsolute(t,i)}static unsignedRightShift(){throw new TypeError("BigInts have no unsigned right shift; use >> instead")}static lessThan(t,i){return 0>JSBI.__compareToBigInt(t,i)}static lessThanOrEqual(t,i){return 0>=JSBI.__compareToBigInt(t,i)}static greaterThan(t,i){return 0<JSBI.__compareToBigInt(t,i)}static greaterThanOrEqual(t,i){return 0<=JSBI.__compareToBigInt(t,i)}static equal(t,i){if(t.sign!==i.sign)return!1;if(t.length!==i.length)return!1;for(let e=0;e<t.length;e++)if(t.__digit(e)!==i.__digit(e))return!1;return!0}static notEqual(t,i){return!JSBI.equal(t,i)}static bitwiseAnd(t,i){var e=Math.max;if(!t.sign&&!i.sign)return JSBI.__absoluteAnd(t,i).__trim();if(t.sign&&i.sign){const n=e(t.length,i.length)+1;let r=JSBI.__absoluteSubOne(t,n);const _=JSBI.__absoluteSubOne(i);return r=JSBI.__absoluteOr(r,_,r),JSBI.__absoluteAddOne(r,!0,r).__trim()}return t.sign&&([t,i]=[i,t]),JSBI.__absoluteAndNot(t,JSBI.__absoluteSubOne(i)).__trim()}static bitwiseXor(t,i){var e=Math.max;if(!t.sign&&!i.sign)return JSBI.__absoluteXor(t,i).__trim();if(t.sign&&i.sign){const n=e(t.length,i.length),r=JSBI.__absoluteSubOne(t,n),_=JSBI.__absoluteSubOne(i);return JSBI.__absoluteXor(r,_,r).__trim()}const n=e(t.length,i.length)+1;t.sign&&([t,i]=[i,t]);let r=JSBI.__absoluteSubOne(i,n);return r=JSBI.__absoluteXor(r,t,r),JSBI.__absoluteAddOne(r,!0,r).__trim()}static bitwiseOr(t,i){const e=(0,Math.max)(t.length,i.length);if(!t.sign&&!i.sign)return JSBI.__absoluteOr(t,i).__trim();if(t.sign&&i.sign){let n=JSBI.__absoluteSubOne(t,e);const r=JSBI.__absoluteSubOne(i);return n=JSBI.__absoluteAnd(n,r,n),JSBI.__absoluteAddOne(n,!0,n).__trim()}t.sign&&([t,i]=[i,t]);let n=JSBI.__absoluteSubOne(i,e);return n=JSBI.__absoluteAndNot(n,t,n),JSBI.__absoluteAddOne(n,!0,n).__trim()}static asIntN(t,i){if(0===i.length)return i;if(0===t)return JSBI.__zero();if(t>=JSBI.__kMaxLengthBits)return i;const e=t+31>>>5;if(i.length<e)return i;const n=i.__unsignedDigit(e-1),r=1<<(31&t-1);if(i.length===e&&n<r)return i;if((n&r)!==r)return JSBI.__truncateToNBits(t,i);if(!i.sign)return JSBI.__truncateAndSubFromPowerOfTwo(t,i,!0);if(0==(n&r-1)){for(let n=e-2;0<=n;n--)if(0!==i.__digit(n))return JSBI.__truncateAndSubFromPowerOfTwo(t,i,!1);return i.length===e&&n===r?i:JSBI.__truncateToNBits(t,i)}return JSBI.__truncateAndSubFromPowerOfTwo(t,i,!1)}static asUintN(t,i){if(0===i.length)return i;if(0===t)return JSBI.__zero();if(i.sign){if(t>JSBI.__kMaxLengthBits)throw new RangeError("BigInt too big");return JSBI.__truncateAndSubFromPowerOfTwo(t,i,!1)}if(t>=JSBI.__kMaxLengthBits)return i;const e=t+31>>>5;if(i.length<e)return i;const n=31&t;if(i.length==e){if(0===n)return i;if(0==i.__digit(e-1)>>>n)return i}return JSBI.__truncateToNBits(t,i)}static ADD(t,i){if(t=JSBI.__toPrimitive(t),i=JSBI.__toPrimitive(i),"string"==typeof t)return"string"!=typeof i&&(i=i.toString()),t+i;if("string"==typeof i)return t.toString()+i;if(t=JSBI.__toNumeric(t),i=JSBI.__toNumeric(i),JSBI.__isBigInt(t)&&JSBI.__isBigInt(i))return JSBI.add(t,i);if("number"==typeof t&&"number"==typeof i)return t+i;throw new TypeError("Cannot mix BigInt and other types, use explicit conversions")}static LT(t,i){return JSBI.__compare(t,i,0)}static LE(t,i){return JSBI.__compare(t,i,1)}static GT(t,i){return JSBI.__compare(t,i,2)}static GE(t,i){return JSBI.__compare(t,i,3)}static EQ(t,i){for(;;){if(JSBI.__isBigInt(t))return JSBI.__isBigInt(i)?JSBI.equal(t,i):JSBI.EQ(i,t);if("number"==typeof t){if(JSBI.__isBigInt(i))return JSBI.__equalToNumber(i,t);if("object"!=typeof i)return t==i;i=JSBI.__toPrimitive(i)}else if("string"==typeof t){if(JSBI.__isBigInt(i))return null!==(t=JSBI.__fromString(t))&&JSBI.equal(t,i);if("object"!=typeof i)return t==i;i=JSBI.__toPrimitive(i)}else if("boolean"==typeof t){if(JSBI.__isBigInt(i))return JSBI.__equalToNumber(i,+t);if("object"!=typeof i)return t==i;i=JSBI.__toPrimitive(i)}else if("symbol"==typeof t){if(JSBI.__isBigInt(i))return!1;if("object"!=typeof i)return t==i;i=JSBI.__toPrimitive(i)}else{if("object"!=typeof t)return t==i;if("object"==typeof i&&i.constructor!==JSBI)return t==i;t=JSBI.__toPrimitive(t)}}}static NE(t,i){return!JSBI.EQ(t,i)}static __zero(){return new JSBI(0,!1)}static __oneDigit(t,i){const e=new JSBI(1,i);return e.__setDigit(0,t),e}__copy(){const t=new JSBI(this.length,this.sign);for(let i=0;i<this.length;i++)t[i]=this[i];return t}__trim(){let t=this.length,i=this[t-1];for(;0===i;)t--,i=this[t-1],this.pop();return 0===t&&(this.sign=!1),this}__initializeDigits(){for(let t=0;t<this.length;t++)this[t]=0}static __decideRounding(t,i,e,n){if(0<i)return-1;let r;if(0>i)r=-i-1;else{if(0===e)return-1;e--,n=t.__digit(e),r=31}let _=1<<r;if(0==(n&_))return-1;if(_-=1,0!=(n&_))return 1;for(;0<e;)if(e--,0!==t.__digit(e))return 1;return 0}static __fromDouble(t){JSBI.__kBitConversionDouble[0]=t;const i=(2047&JSBI.__kBitConversionInts[1]>>>20)-1023,e=1+(i>>>5),n=new JSBI(e,0>t);let r=1048575&JSBI.__kBitConversionInts[1]|1048576,_=JSBI.__kBitConversionInts[0];const o=31&i;let s,l=0;if(o<20){const t=20-o;l=t+32,s=r>>>t,r=r<<32-t|_>>>t,_<<=32-t}else if(20===o)l=32,s=r,r=_;else{const t=o-20;l=32-t,s=r<<t|_>>>32-t,r=_<<t}n.__setDigit(e-1,s);for(let t=e-2;0<=t;t--)0<l?(l-=32,s=r,r=_):s=0,n.__setDigit(t,s);return n.__trim()}static __isWhitespace(t){return!!(13>=t&&9<=t)||(159>=t?32==t:131071>=t?160==t||5760==t:196607>=t?10>=(t&=131071)||40==t||41==t||47==t||95==t||4096==t:65279==t)}static __fromString(t,i=0){let e=0;const n=t.length;let r=0;if(r===n)return JSBI.__zero();let _=t.charCodeAt(r);for(;JSBI.__isWhitespace(_);){if(++r===n)return JSBI.__zero();_=t.charCodeAt(r)}if(43===_){if(++r===n)return null;_=t.charCodeAt(r),e=1}else if(45===_){if(++r===n)return null;_=t.charCodeAt(r),e=-1}if(0===i){if(i=10,48===_){if(++r===n)return JSBI.__zero();if(_=t.charCodeAt(r),88===_||120===_){if(i=16,++r===n)return null;_=t.charCodeAt(r)}else if(79===_||111===_){if(i=8,++r===n)return null;_=t.charCodeAt(r)}else if(66===_||98===_){if(i=2,++r===n)return null;_=t.charCodeAt(r)}}}else if(16===i&&48===_){if(++r===n)return JSBI.__zero();if(_=t.charCodeAt(r),88===_||120===_){if(++r===n)return null;_=t.charCodeAt(r)}}for(;48===_;){if(++r===n)return JSBI.__zero();_=t.charCodeAt(r)}const o=n-r;let s=JSBI.__kMaxBitsPerChar[i],l=JSBI.__kBitsPerCharTableMultiplier-1;if(o>1073741824/s)return null;const g=s*o+l>>>JSBI.__kBitsPerCharTableShift,u=new JSBI(g+31>>>5,!1),a=10>i?i:10,f=10<i?i-10:0;if(0==(i&i-1)){s>>=JSBI.__kBitsPerCharTableShift;const i=[],e=[];let o=!1;do{let l=0,g=0;for(;;){let i;if(_-48>>>0<a)i=_-48;else{if(!((32|_)-97>>>0<f)){o=!0;break}i=(32|_)-87}if(g+=s,l=l<<s|i,++r===n){o=!0;break}if(_=t.charCodeAt(r),32<g+s)break}i.push(l),e.push(g)}while(!o);JSBI.__fillFromParts(u,i,e)}else{u.__initializeDigits();let e=!1,o=0;do{let g=0,c=1;for(;;){let s;if(_-48>>>0<a)s=_-48;else{if(!((32|_)-97>>>0<f)){e=!0;break}s=(32|_)-87}const l=c*i;if(4294967295<l)break;if(c=l,g=g*i+s,o++,++r===n){e=!0;break}_=t.charCodeAt(r)}l=32*JSBI.__kBitsPerCharTableMultiplier-1;const B=s*o+l>>>JSBI.__kBitsPerCharTableShift+5;u.__inplaceMultiplyAdd(c,g,B)}while(!e)}if(r!==n){if(!JSBI.__isWhitespace(_))return null;for(r++;r<n;r++)if(_=t.charCodeAt(r),!JSBI.__isWhitespace(_))return null}return 0!=e&&10!==i?null:(u.sign=-1==e,u.__trim())}static __fillFromParts(t,i,e){let n=0,r=0,_=0;for(let o=i.length-1;0<=o;o--){const s=i[o],l=e[o];r|=s<<_,_+=l,32===_?(t.__setDigit(n++,r),_=0,r=0):32<_&&(t.__setDigit(n++,r),_-=32,r=s>>>l-_)}if(0!==r){if(n>=t.length)throw new Error("implementation bug");t.__setDigit(n++,r)}for(;n<t.length;n++)t.__setDigit(n,0)}static __toStringBasePowerOfTwo(t,i){var e=Math.clz32;const n=t.length;let r=i-1;r=(85&r>>>1)+(85&r),r=(51&r>>>2)+(51&r),r=(15&r>>>4)+(15&r);const _=r,o=i-1,s=t.__digit(n-1);let l=0|(32*n-e(s)+_-1)/_;if(t.sign&&l++,268435456<l)throw new Error("string too long");const g=Array(l);let u=l-1,a=0,f=0;for(let i=0;i<n-1;i++){const e=t.__digit(i),n=(a|e<<f)&o;g[u--]=JSBI.__kConversionChars[n];const r=_-f;for(a=e>>>r,f=32-r;f>=_;)g[u--]=JSBI.__kConversionChars[a&o],a>>>=_,f-=_}const c=(a|s<<f)&o;for(g[u--]=JSBI.__kConversionChars[c],a=s>>>_-f;0!==a;)g[u--]=JSBI.__kConversionChars[a&o],a>>>=_;if(t.sign&&(g[u--]="-"),-1!=u)throw new Error("implementation bug");return g.join("")}static __toStringGeneric(t,i,e){var n=Math.clz32;const r=t.length;if(0===r)return"";if(1===r){let n=t.__unsignedDigit(0).toString(i);return!1===e&&t.sign&&(n="-"+n),n}const _=32*r-n(t.__digit(r-1)),o=JSBI.__kMaxBitsPerChar[i]-1;let s=_*JSBI.__kBitsPerCharTableMultiplier;s+=o-1,s=0|s/o;const l=s+1>>1,g=JSBI.exponentiate(JSBI.__oneDigit(i,!1),JSBI.__oneDigit(l,!1));let u,a;const f=g.__unsignedDigit(0);if(1===g.length&&65535>=f){u=new JSBI(t.length,!1),u.__initializeDigits();let e=0;for(let i=2*t.length-1;0<=i;i--){const n=e<<16|t.__halfDigit(i);u.__setHalfDigit(i,0|n/f),e=0|n%f}a=e.toString(i)}else{const e=JSBI.__absoluteDivLarge(t,g,!0,!0);u=e.quotient;const n=e.remainder.__trim();a=JSBI.__toStringGeneric(n,i,!0)}u.__trim();let c=JSBI.__toStringGeneric(u,i,!0);for(;a.length<l;)a="0"+a;return!1===e&&t.sign&&(c="-"+c),c+a}static __unequalSign(t){return t?-1:1}static __absoluteGreater(t){return t?-1:1}static __absoluteLess(t){return t?1:-1}static __compareToBigInt(t,i){const e=t.sign;if(e!==i.sign)return JSBI.__unequalSign(e);const n=JSBI.__absoluteCompare(t,i);return 0<n?JSBI.__absoluteGreater(e):0>n?JSBI.__absoluteLess(e):0}static __compareToNumber(t,i){if(!0|i){const e=t.sign,n=0>i;if(e!==n)return JSBI.__unequalSign(e);if(0===t.length){if(n)throw new Error("implementation bug");return 0===i?0:-1}if(1<t.length)return JSBI.__absoluteGreater(e);const r=Math.abs(i),_=t.__unsignedDigit(0);return _>r?JSBI.__absoluteGreater(e):_<r?JSBI.__absoluteLess(e):0}return JSBI.__compareToDouble(t,i)}static __compareToDouble(t,i){var e=Math.clz32;if(i!=i)return i;if(i===1/0)return-1;if(i===-1/0)return 1;const n=t.sign;if(n!==0>i)return JSBI.__unequalSign(n);if(0===i)throw new Error("implementation bug: should be handled elsewhere");if(0===t.length)return-1;JSBI.__kBitConversionDouble[0]=i;const r=2047&JSBI.__kBitConversionInts[1]>>>20;if(2047==r)throw new Error("implementation bug: handled elsewhere");const _=r-1023;if(0>_)return JSBI.__absoluteGreater(n);const o=t.length;let s=t.__digit(o-1);const l=e(s),g=32*o-l,u=_+1;if(g<u)return JSBI.__absoluteLess(n);if(g>u)return JSBI.__absoluteGreater(n);let a=1048576|1048575&JSBI.__kBitConversionInts[1],f=JSBI.__kBitConversionInts[0];const c=31-l;if(c!==(g-1)%31)throw new Error("implementation bug");let B,h=0;if(20>c){const t=20-c;h=t+32,B=a>>>t,a=a<<32-t|f>>>t,f<<=32-t}else if(20===c)h=32,B=a,a=f;else{const t=c-20;h=32-t,B=a<<t|f>>>32-t,a=f<<t}if(s>>>=0,B>>>=0,s>B)return JSBI.__absoluteGreater(n);if(s<B)return JSBI.__absoluteLess(n);for(let i=o-2;0<=i;i--){0<h?(h-=32,B=a>>>0,a=f,f=0):B=0;const e=t.__unsignedDigit(i);if(e>B)return JSBI.__absoluteGreater(n);if(e<B)return JSBI.__absoluteLess(n)}if(0!==a||0!==f){if(0===h)throw new Error("implementation bug");return JSBI.__absoluteLess(n)}return 0}static __equalToNumber(t,i){var e=Math.abs;return i|0===i?0===i?0===t.length:1===t.length&&t.sign===0>i&&t.__unsignedDigit(0)===e(i):0===JSBI.__compareToDouble(t,i)}static __comparisonResultToBool(t,i){switch(i){case 0:return 0>t;case 1:return 0>=t;case 2:return 0<t;case 3:return 0<=t}throw new Error("unreachable")}static __compare(t,i,e){if(t=JSBI.__toPrimitive(t),i=JSBI.__toPrimitive(i),"string"==typeof t&&"string"==typeof i)switch(e){case 0:return t<i;case 1:return t<=i;case 2:return t>i;case 3:return t>=i}if(JSBI.__isBigInt(t)&&"string"==typeof i)return null!==(i=JSBI.__fromString(i))&&JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(t,i),e);if("string"==typeof t&&JSBI.__isBigInt(i))return null!==(t=JSBI.__fromString(t))&&JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(t,i),e);if(t=JSBI.__toNumeric(t),i=JSBI.__toNumeric(i),JSBI.__isBigInt(t)){if(JSBI.__isBigInt(i))return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(t,i),e);if("number"!=typeof i)throw new Error("implementation bug");return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(t,i),e)}if("number"!=typeof t)throw new Error("implementation bug");if(JSBI.__isBigInt(i))return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(i,t),2^e);if("number"!=typeof i)throw new Error("implementation bug");return 0===e?t<i:1===e?t<=i:2===e?t>i:3===e?t>=i:void 0}__clzmsd(){return Math.clz32(this[this.length-1])}static __absoluteAdd(t,i,e){if(t.length<i.length)return JSBI.__absoluteAdd(i,t,e);if(0===t.length)return t;if(0===i.length)return t.sign===e?t:JSBI.unaryMinus(t);let n=t.length;(0===t.__clzmsd()||i.length===t.length&&0===i.__clzmsd())&&n++;const r=new JSBI(n,e);let _=0,o=0;for(;o<i.length;o++){const e=i.__digit(o),n=t.__digit(o),s=(65535&n)+(65535&e)+_,l=(n>>>16)+(e>>>16)+(s>>>16);_=l>>>16,r.__setDigit(o,65535&s|l<<16)}for(;o<t.length;o++){const i=t.__digit(o),e=(65535&i)+_,n=(i>>>16)+(e>>>16);_=n>>>16,r.__setDigit(o,65535&e|n<<16)}return o<r.length&&r.__setDigit(o,_),r.__trim()}static __absoluteSub(t,i,e){if(0===t.length)return t;if(0===i.length)return t.sign===e?t:JSBI.unaryMinus(t);const n=new JSBI(t.length,e);let r=0,_=0;for(;_<i.length;_++){const e=t.__digit(_),o=i.__digit(_),s=(65535&e)-(65535&o)-r;r=1&s>>>16;const l=(e>>>16)-(o>>>16)-r;r=1&l>>>16,n.__setDigit(_,65535&s|l<<16)}for(;_<t.length;_++){const i=t.__digit(_),e=(65535&i)-r;r=1&e>>>16;const o=(i>>>16)-r;r=1&o>>>16,n.__setDigit(_,65535&e|o<<16)}return n.__trim()}static __absoluteAddOne(t,i,e=null){const n=t.length;null===e?e=new JSBI(n,i):e.sign=i;let r=!0;for(let i,_=0;_<n;_++){if(i=t.__digit(_),r){const t=-1===i;i=0|i+1,r=t}e.__setDigit(_,i)}return r&&e.__setDigitGrow(n,1),e}static __absoluteSubOne(t,i){const e=t.length,n=new JSBI(i=i||e,!1);let r=!0;for(let i,_=0;_<e;_++){if(i=t.__digit(_),r){const t=0===i;i=0|i-1,r=t}n.__setDigit(_,i)}if(r)throw new Error("implementation bug");for(let t=e;t<i;t++)n.__setDigit(t,0);return n}static __absoluteAnd(t,i,e=null){let n=t.length,r=i.length,_=r;if(n<r){_=n;const e=t,o=n;t=i,n=r,i=e,r=o}let o=_;null===e?e=new JSBI(o,!1):o=e.length;let s=0;for(;s<_;s++)e.__setDigit(s,t.__digit(s)&i.__digit(s));for(;s<o;s++)e.__setDigit(s,0);return e}static __absoluteAndNot(t,i,e=null){const n=t.length,r=i.length;let _=r;n<r&&(_=n);let o=n;null===e?e=new JSBI(o,!1):o=e.length;let s=0;for(;s<_;s++)e.__setDigit(s,t.__digit(s)&~i.__digit(s));for(;s<n;s++)e.__setDigit(s,t.__digit(s));for(;s<o;s++)e.__setDigit(s,0);return e}static __absoluteOr(t,i,e=null){let n=t.length,r=i.length,_=r;if(n<r){_=n;const e=t,o=n;t=i,n=r,i=e,r=o}let o=n;null===e?e=new JSBI(o,!1):o=e.length;let s=0;for(;s<_;s++)e.__setDigit(s,t.__digit(s)|i.__digit(s));for(;s<n;s++)e.__setDigit(s,t.__digit(s));for(;s<o;s++)e.__setDigit(s,0);return e}static __absoluteXor(t,i,e=null){let n=t.length,r=i.length,_=r;if(n<r){_=n;const e=t,o=n;t=i,n=r,i=e,r=o}let o=n;null===e?e=new JSBI(o,!1):o=e.length;let s=0;for(;s<_;s++)e.__setDigit(s,t.__digit(s)^i.__digit(s));for(;s<n;s++)e.__setDigit(s,t.__digit(s));for(;s<o;s++)e.__setDigit(s,0);return e}static __absoluteCompare(t,i){const e=t.length-i.length;if(0!=e)return e;let n=t.length-1;for(;0<=n&&t.__digit(n)===i.__digit(n);)n--;return 0>n?0:t.__unsignedDigit(n)>i.__unsignedDigit(n)?1:-1}static __multiplyAccumulate(t,i,e,n){var r=Math.imul;if(0===i)return;const _=65535&i,o=i>>>16;let s=0,l=0,g=0;for(let i=0;i<t.length;i++,n++){let u=e.__digit(n),a=65535&u,f=u>>>16;const c=t.__digit(i),B=65535&c,h=c>>>16,S=r(B,_),I=r(B,o),J=r(h,_),d=r(h,o);a+=l+(65535&S),f+=g+s+(a>>>16)+(S>>>16)+(65535&I)+(65535&J),s=f>>>16,l=(I>>>16)+(J>>>16)+(65535&d)+s,s=l>>>16,l&=65535,g=d>>>16,u=65535&a|f<<16,e.__setDigit(n,u)}for(;0!=s||0!==l||0!==g;n++){let t=e.__digit(n);const i=(65535&t)+l,r=(t>>>16)+(i>>>16)+g+s;l=0,g=0,s=r>>>16,t=65535&i|r<<16,e.__setDigit(n,t)}}static __internalMultiplyAdd(t,i,e,n,r){var _=Math.imul;let o=e,s=0;for(let e=0;e<n;e++){const n=t.__digit(e),l=_(65535&n,i),g=(65535&l)+s+o;o=g>>>16;const u=_(n>>>16,i),a=(65535&u)+(l>>>16)+o;o=a>>>16,s=u>>>16,r.__setDigit(e,a<<16|65535&g)}if(r.length>n)for(r.__setDigit(n++,o+s);n<r.length;)r.__setDigit(n++,0);else if(0!==o+s)throw new Error("implementation bug")}__inplaceMultiplyAdd(t,i,e){var n=Math.imul;e>this.length&&(e=this.length);const r=65535&t,_=t>>>16;let o=0,s=65535&i,l=i>>>16;for(let t=0;t<e;t++){const i=this.__digit(t),e=65535&i,g=i>>>16,u=n(e,r),a=n(e,_),f=n(g,r),c=n(g,_),B=s+(65535&u),h=l+o+(B>>>16)+(u>>>16)+(65535&a)+(65535&f);s=(a>>>16)+(f>>>16)+(65535&c)+(h>>>16),o=s>>>16,s&=65535,l=c>>>16,this.__setDigit(t,65535&B|h<<16)}if(0!=o||0!==s||0!==l)throw new Error("implementation bug")}static __absoluteDivSmall(t,i,e){null===e&&(e=new JSBI(t.length,!1));let n=0;for(let r,_=2*t.length-1;0<=_;_-=2){r=(n<<16|t.__halfDigit(_))>>>0;const o=0|r/i;n=0|r%i,r=(n<<16|t.__halfDigit(_-1))>>>0;const s=0|r/i;n=0|r%i,e.__setDigit(_>>>1,o<<16|s)}return e}static __absoluteModSmall(t,i){let e=0;for(let n=2*t.length-1;0<=n;n--)e=0|((e<<16|t.__halfDigit(n))>>>0)%i;return e}static __absoluteDivLarge(t,i,e,n){var r=Math.imul;const _=i.__halfDigitLength(),o=i.length,s=t.__halfDigitLength()-_;let l=null;e&&(l=new JSBI(s+2>>>1,!1),l.__initializeDigits());const g=new JSBI(_+2>>>1,!1);g.__initializeDigits();const u=JSBI.__clz16(i.__halfDigit(_-1));0<u&&(i=JSBI.__specialLeftShift(i,u,0));const a=JSBI.__specialLeftShift(t,u,1),f=i.__halfDigit(_-1);let c=0;for(let t,n=s;0<=n;n--){t=65535;const s=a.__halfDigit(n+_);if(s!==f){const e=(s<<16|a.__halfDigit(n+_-1))>>>0;t=0|e/f;let o=0|e%f;const l=i.__halfDigit(_-2),g=a.__halfDigit(n+_-2);for(;r(t,l)>>>0>(o<<16|g)>>>0&&(t--,o+=f,!(65535<o)););}JSBI.__internalMultiplyAdd(i,t,0,o,g);let u=a.__inplaceSub(g,n,_+1);0!==u&&(u=a.__inplaceAdd(i,n,_),a.__setHalfDigit(n+_,a.__halfDigit(n+_)+u),t--),e&&(1&n?c=t<<16:l.__setDigit(n>>>1,c|t))}return n?(a.__inplaceRightShift(u),e?{quotient:l,remainder:a}:a):e?l:void 0}static __clz16(t){return Math.clz32(t)-16}__inplaceAdd(t,i,e){let n=0;for(let r=0;r<e;r++){const e=this.__halfDigit(i+r)+t.__halfDigit(r)+n;n=e>>>16,this.__setHalfDigit(i+r,e)}return n}__inplaceSub(t,i,e){let n=0;if(1&i){i>>=1;let r=this.__digit(i),_=65535&r,o=0;for(;o<e-1>>>1;o++){const e=t.__digit(o),s=(r>>>16)-(65535&e)-n;n=1&s>>>16,this.__setDigit(i+o,s<<16|65535&_),r=this.__digit(i+o+1),_=(65535&r)-(e>>>16)-n,n=1&_>>>16}const s=t.__digit(o),l=(r>>>16)-(65535&s)-n;if(n=1&l>>>16,this.__setDigit(i+o,l<<16|65535&_),i+o+1>=this.length)throw new RangeError("out of bounds");0==(1&e)&&(r=this.__digit(i+o+1),_=(65535&r)-(s>>>16)-n,n=1&_>>>16,this.__setDigit(i+t.length,4294901760&r|65535&_))}else{i>>=1;let r=0;for(;r<t.length-1;r++){const e=this.__digit(i+r),_=t.__digit(r),o=(65535&e)-(65535&_)-n;n=1&o>>>16;const s=(e>>>16)-(_>>>16)-n;n=1&s>>>16,this.__setDigit(i+r,s<<16|65535&o)}const _=this.__digit(i+r),o=t.__digit(r),s=(65535&_)-(65535&o)-n;n=1&s>>>16;let l=0;0==(1&e)&&(l=(_>>>16)-(o>>>16)-n,n=1&l>>>16),this.__setDigit(i+r,l<<16|65535&s)}return n}__inplaceRightShift(t){if(0===t)return;let i=this.__digit(0)>>>t;const e=this.length-1;for(let n=0;n<e;n++){const e=this.__digit(n+1);this.__setDigit(n,e<<32-t|i),i=e>>>t}this.__setDigit(e,i)}static __specialLeftShift(t,i,e){const n=t.length,r=new JSBI(n+e,!1);if(0===i){for(let i=0;i<n;i++)r.__setDigit(i,t.__digit(i));return 0<e&&r.__setDigit(n,0),r}let _=0;for(let e=0;e<n;e++){const n=t.__digit(e);r.__setDigit(e,n<<i|_),_=n>>>32-i}return 0<e&&r.__setDigit(n,_),r}static __leftShiftByAbsolute(t,i){const e=JSBI.__toShiftAmount(i);if(0>e)throw new RangeError("BigInt too big");const n=e>>>5,r=31&e,_=t.length,o=0!==r&&0!=t.__digit(_-1)>>>32-r,s=_+n+(o?1:0),l=new JSBI(s,t.sign);if(0===r){let i=0;for(;i<n;i++)l.__setDigit(i,0);for(;i<s;i++)l.__setDigit(i,t.__digit(i-n))}else{let i=0;for(let t=0;t<n;t++)l.__setDigit(t,0);for(let e=0;e<_;e++){const _=t.__digit(e);l.__setDigit(e+n,_<<r|i),i=_>>>32-r}if(o)l.__setDigit(_+n,i);else if(0!==i)throw new Error("implementation bug")}return l.__trim()}static __rightShiftByAbsolute(t,i){const e=t.length,n=t.sign,r=JSBI.__toShiftAmount(i);if(0>r)return JSBI.__rightShiftByMaximum(n);const _=r>>>5,o=31&r;let s=e-_;if(0>=s)return JSBI.__rightShiftByMaximum(n);let l=!1;if(n)if(0!=(t.__digit(_)&(1<<o)-1))l=!0;else for(let i=0;i<_;i++)if(0!==t.__digit(i)){l=!0;break}l&&0===o&&0==~t.__digit(e-1)&&s++;let g=new JSBI(s,n);if(0===o)for(let i=_;i<e;i++)g.__setDigit(i-_,t.__digit(i));else{let i=t.__digit(_)>>>o;const n=e-_-1;for(let e=0;e<n;e++){const n=t.__digit(e+_+1);g.__setDigit(e,n<<32-o|i),i=n>>>o}g.__setDigit(n,i)}return l&&(g=JSBI.__absoluteAddOne(g,!0,g)),g.__trim()}static __rightShiftByMaximum(t){return t?JSBI.__oneDigit(1,!0):JSBI.__zero()}static __toShiftAmount(t){if(1<t.length)return-1;const i=t.__unsignedDigit(0);return i>JSBI.__kMaxLengthBits?-1:i}static __toPrimitive(t,i="default"){if("object"!=typeof t)return t;if(t.constructor===JSBI)return t;const e=t[Symbol.toPrimitive];if(e){const t=e(i);if("object"!=typeof t)return t;throw new TypeError("Cannot convert object to primitive value")}const n=t.valueOf;if(n){const i=n.call(t);if("object"!=typeof i)return i}const r=t.toString;if(r){const i=r.call(t);if("object"!=typeof i)return i}throw new TypeError("Cannot convert object to primitive value")}static __toNumeric(t){return JSBI.__isBigInt(t)?t:+t}static __isBigInt(t){return"object"==typeof t&&t.constructor===JSBI}static __truncateToNBits(t,i){const e=t+31>>>5,n=new JSBI(e,i.sign),r=e-1;for(let t=0;t<r;t++)n.__setDigit(t,i.__digit(t));let _=i.__digit(r);if(0!=(31&t)){const i=32-(31&t);_=_<<i>>>i}return n.__setDigit(r,_),n.__trim()}static __truncateAndSubFromPowerOfTwo(t,i,e){var n=Math.min;const r=t+31>>>5,_=new JSBI(r,e);let o=0;const s=r-1;let l=0;for(const t=n(s,i.length);o<t;o++){const t=i.__digit(o),e=0-(65535&t)-l;l=1&e>>>16;const n=0-(t>>>16)-l;l=1&n>>>16,_.__setDigit(o,65535&e|n<<16)}for(;o<s;o++)_.__setDigit(o,0|-l);let g=s<i.length?i.__digit(s):0;const u=31&t;let a;if(0==u){const t=0-(65535&g)-l;l=1&t>>>16,a=65535&t|0-(g>>>16)-l<<16}else{const t=32-u;g=g<<t>>>t;const i=1<<32-t,e=(65535&i)-(65535&g)-l;l=1&e>>>16,a=65535&e|(i>>>16)-(g>>>16)-l<<16,a&=i-1}return _.__setDigit(s,a),_.__trim()}__digit(t){return this[t]}__unsignedDigit(t){return this[t]>>>0}__setDigit(t,i){this[t]=0|i}__setDigitGrow(t,i){this[t]=0|i}__halfDigitLength(){const t=this.length;return 65535>=this.__unsignedDigit(t-1)?2*t-1:2*t}__halfDigit(t){return 65535&this[t>>>1]>>>((1&t)<<4)}__setHalfDigit(t,i){const e=t>>>1,n=this.__digit(e),r=1&t?65535&n|i<<16:4294901760&n|65535&i;this.__setDigit(e,r)}static __digitPow(t,i){let e=1;for(;0<i;)1&i&&(e*=t),i>>>=1,t*=t;return e}}function map(t,i,e,n,r){return n+(t-i)/(e-i)*(r-n)}function norm(t,i,e){return(t-i)/(e-i)}function lerp(t,i,e){return(e-i)*t+i}function clamp(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Math.min(e,Math.max(i,t))}function randomInt(t,i){return t=Math.ceil(t),i=Math.floor(i),Math.floor(Math.random()*(i-t))+t}function random(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Math.floor(Math.random()*(i-t))+t}function divideRoundBigInt(t,i){return t=JSBI.BigInt(String(t)),i=JSBI.BigInt(String(i)),JSBI.divide(JSBI.add(t,JSBI.divide(i,JSBI.BigInt(2))),i).toString()}JSBI.__kMaxLength=33554432,JSBI.__kMaxLengthBits=JSBI.__kMaxLength<<5,JSBI.__kMaxBitsPerChar=[0,0,32,51,64,75,83,90,96,102,107,111,115,119,122,126,128,131,134,136,139,141,143,145,147,149,151,153,154,156,158,159,160,162,163,165,166],JSBI.__kBitsPerCharTableShift=5,JSBI.__kBitsPerCharTableMultiplier=1<<JSBI.__kBitsPerCharTableShift,JSBI.__kConversionChars=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],JSBI.__kBitConversionBuffer=new ArrayBuffer(8),JSBI.__kBitConversionDouble=new Float64Array(JSBI.__kBitConversionBuffer),JSBI.__kBitConversionInts=new Int32Array(JSBI.__kBitConversionBuffer),exports.JSBI=JSBI,exports.clamp=clamp,exports.divideRoundBigInt=divideRoundBigInt,exports.lerp=lerp,exports.map=map,exports.norm=norm,exports.random=random,exports.randomInt=randomInt;