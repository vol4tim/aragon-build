import React,{useContext,useState,useEffect,useRef,useCallback}from"react";import{tokenIconUrl,fetchTokenData}from"./utils.js";const UseTokenContext=React.createContext(null);function useToken(e=""){const t=useContext(UseTokenContext),[n,o]=useState(null);if(null===t)throw new Error("useToken() can only be used inside of <UseTokenProvider />, please declare it at a higher level.");return useEffect((()=>{let n=!1;return(async()=>{const r=await t.fetchTokenData(e);n||o(r)})(),()=>{n=!0}}),[e]),{iconUrl:tokenIconUrl(e),symbol:n&&n.symbol,name:n&&n.name}}function UseTokenProvider({children:e}){const t=useRef(new Map),n=useCallback((async e=>{if(t.current.has(e))return t.current.get(e);try{const n=await fetchTokenData(e);return t.current.set(e,n),n}catch(e){console.log("ar",e)}}),[]);return React.createElement(UseTokenContext.Provider,{value:{fetchTokenData:n}},e)}export{UseTokenProvider,useToken};