function _iterableToArrayLimit(r,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r)){var e=[],i=!0,a=!1,o=void 0;try{for(var l,n=r[Symbol.iterator]();!(i=(l=n.next()).done)&&(e.push(l.value),!t||e.length!==t);i=!0);}catch(r){a=!0,o=r}finally{try{i||null==n.return||n.return()}finally{if(a)throw o}}return e}}var iterableToArrayLimit=_iterableToArrayLimit;export default iterableToArrayLimit;export{iterableToArrayLimit as __moduleExports};