import sha3 from"../../node_modules/js-sha3/src/sha3.js";import{warn}from"./environment.js";var keccak256=sha3.keccak_256,EMPTY_ADDRESS="0x0000000000000000000000000000000000000000",TRANSACTION_REGEX=/^0x[A-Fa-f0-9]{64}$/,ADDRESS_REGEX=/^0x[0-9a-fA-F]{40}$/,TRUST_WALLET_BASE_URL="https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum",ETHERSCAN_URL="etherscan.io",POLYGON_URL="polygonscan.com",NETWORK_TYPES_URLS=new Map([["main",ETHERSCAN_URL],["kovan","kovan.".concat(ETHERSCAN_URL)],["rinkeby","rinkeby.".concat(ETHERSCAN_URL)],["ropsten","ropsten.".concat(ETHERSCAN_URL)],["goerli","goerli.".concat(ETHERSCAN_URL)],["matic",POLYGON_URL],["mumbai","mumbai.".concat(POLYGON_URL)],["harmony","explorer.harmony.one"],["harmonyTest","explorer.pops.one"]]),URL_TYPES=new Map([["block","block"],["transaction","tx"],["address","address"],["token","token"]]);function _getBlockExplorer(e){var r=e.type,t=e.value,o=e.networkType;if("private"===o)return"";if(!NETWORK_TYPES_URLS.has(o))throw new Error("network type not supported.");if(!URL_TYPES.has(r))throw new Error("type not supported.");var n=NETWORK_TYPES_URLS.get(o),s=URL_TYPES.get(r);return"https://".concat(n,"/").concat(s,"/").concat(t)}function toChecksumAddress(e){if(!/^(0x)?[0-9a-f]{40}$/i.test(e))throw new Error('Given address "'+e+'" is not a valid Ethereum address.');e=e.toLowerCase().replace(/^0x/i,"");for(var r=keccak256(e).replace(/^0x/i,""),t="0x",o=0;o<e.length;o++)parseInt(r[o],16)>7?t+=e[o].toUpperCase():t+=e[o];return t}function addressesEqual(e,r){return(e=e&&e.toLowerCase())===(r&&r.toLowerCase())}function shortenAddress(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;return e?e.length<2*r+2?e:e.slice(0,r+2)+"â€¦"+e.slice(-r):""}var shortenTransaction=shortenAddress;function isAddress(e){return ADDRESS_REGEX.test(e)}function isTransaction(e){return TRANSACTION_REGEX.test(e)}function blockExplorerUrl(e,r){var t=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).networkType,o=void 0===t?"main":t;try{return _getBlockExplorer({type:e,value:r,networkType:o})}catch(e){return warn("blockExplorerUrl(): ".concat(e.message)),""}}function tokenIconUrl(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";try{e=toChecksumAddress(e.trim())}catch(e){return""}return e===EMPTY_ADDRESS?"".concat(TRUST_WALLET_BASE_URL,"/info/logo.png"):"".concat(TRUST_WALLET_BASE_URL,"/assets/").concat(e,"/logo.png")}export{addressesEqual,blockExplorerUrl,isAddress,isTransaction,shortenAddress,shortenTransaction,tokenIconUrl};